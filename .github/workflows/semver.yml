name: Run gitwerk
on:
  push:
    branches:
      - master

jobs:
  semver-auto:
    name: Run semver-auto
    runs-on: ubuntu-latest
    steps:
      - name: Check out code.
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Get latest gitwerk
        run: |
          wget "https://github.com/rinx/gitwerk/releases/latest/download/gitwerk-linux-amd64.zip"
          unzip gitwerk-linux-amd64.zip
      - name: Run gitwerk semver-auto
        run: |
          GITWERK_RESULT=`./gitwerk sci << EOF
          (let [ctx {:options {:dry-run? true}}
                res (semver-auto ctx nil)
                status (get-in res [:console-out :status])
                oldv (get-in res [:console-out :old-version])
                newv (get-in res [:console-out :new-version])]
            (if (= status :updated)
              newv
              "not-updated"))
          EOF`

          if [ "${GITWERK_RESULT}" = "not-updated" ]; then
            echo "version not updated"
            exit 0
          fi

          echo "version updated: ${GITWERK_RESULT}"
          echo "${GITWERK_RESULT}" > VALD_CLIENT_CLJ_VERSION

          git checkout master

          git config --global user.name "rinx"
          git config --global user.email "rintaro.okamura@gmail.com"

          git add VALD_CLIENT_CLJ_VERSION
          git commit --signoff -m ":bookmark: Release ${GITWERK_RESULT}"

          git tag ${GITWERK_RESULT}
          git remote set-url origin "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"

          git push origin master
          git push origin ${GITWERK_RESULT}
        env:
          GITHUB_USER: ${{ secrets.VALDCLI_USER }}
          GITHUB_TOKEN: ${{ secrets.VALDCLI_TOKEN }}
